# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2018-04-14 16:55
from __future__ import unicode_literals

import DjangoUeditor.models
import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=255, verbose_name='答复内容')),
            ],
            options={
                'verbose_name': '医师回复',
                'verbose_name_plural': '医师回复',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=255, verbose_name='评论内容')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
            options={
                'verbose_name': '评论表',
                'verbose_name_plural': '评论表',
            },
        ),
        migrations.CreateModel(
            name='CourseBase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30, verbose_name='课程标题')),
                ('course_desc', DjangoUeditor.models.UEditorField(default='', verbose_name='课程介绍')),
                ('add_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='课程添加时间')),
                ('duration_time', models.FloatField(blank=True, null=True, verbose_name='课程时长')),
                ('class_num', models.IntegerField(blank=True, null=True, verbose_name='课时数')),
                ('play_num', models.IntegerField(blank=True, null=True, verbose_name='播放量')),
                ('up_num', models.IntegerField(blank=True, null=True, verbose_name='点赞量')),
                ('cost_money', models.FloatField(blank=True, null=True, verbose_name='课程费用')),
            ],
            options={
                'verbose_name': '课程基础信息',
                'verbose_name_plural': '课程基础信息',
            },
        ),
        migrations.CreateModel(
            name='CourseDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subtitle', models.CharField(blank=True, max_length=300, null=True, verbose_name='课时小标题')),
                ('play_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='课时上架时间')),
                ('play_num', models.IntegerField(blank=True, null=True, verbose_name='播放量')),
                ('up_num', models.IntegerField(blank=True, null=True, verbose_name='点赞量')),
                ('cost_money', models.FloatField(blank=True, null=True, verbose_name='课程费用')),
            ],
            options={
                'verbose_name': '课程详细信息',
                'verbose_name_plural': '课程详细信息',
            },
        ),
        migrations.CreateModel(
            name='CourseImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='banner', verbose_name='图片')),
                ('index', models.IntegerField(default=0, verbose_name='轮播顺序')),
                ('add_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='添加时间')),
            ],
            options={
                'verbose_name': '课程图片',
                'verbose_name_plural': '课程图片',
            },
        ),
        migrations.CreateModel(
            name='CourseTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_name', models.CharField(max_length=30, verbose_name='类名')),
                ('tag_desc', models.CharField(blank=True, max_length=255, null=True, verbose_name='类名描述')),
                ('tag_index', models.IntegerField(default=0, verbose_name='权重排序')),
            ],
            options={
                'verbose_name': '课程类别',
                'verbose_name_plural': '课程类别',
            },
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('favorite', models.BooleanField(verbose_name='是否收藏')),
            ],
            options={
                'verbose_name': '记录收藏表',
                'verbose_name_plural': '记录收藏表',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=255, verbose_name='提问内容')),
                ('image', models.ImageField(blank=True, null=True, upload_to='question', verbose_name='图片')),
                ('add_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='添加时间')),
            ],
            options={
                'verbose_name': '患者提问',
                'verbose_name_plural': '患者提问',
            },
        ),
        migrations.CreateModel(
            name='Reply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=255, verbose_name='回复内容')),
            ],
            options={
                'verbose_name': '回复表',
                'verbose_name_plural': '回复表',
            },
        ),
        migrations.CreateModel(
            name='Share',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('share', models.IntegerField(blank=True, null=True, verbose_name='有效分享数')),
            ],
            options={
                'verbose_name': '记录分享表',
                'verbose_name_plural': '记录分享表',
            },
        ),
        migrations.CreateModel(
            name='TeacherProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=300, null=True, verbose_name='讲师简介')),
            ],
            options={
                'verbose_name': '讲师',
                'verbose_name_plural': '讲师',
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cost', models.IntegerField(blank=True, null=True, verbose_name='交易金额(0代表是分享用户)')),
                ('create_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='交易产生时间')),
            ],
            options={
                'verbose_name': '交易流水',
                'verbose_name_plural': '交易流水',
            },
        ),
        migrations.CreateModel(
            name='Up',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('up', models.BooleanField(verbose_name='是否赞')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='courses.CourseDetail', verbose_name='点赞课程')),
            ],
            options={
                'verbose_name': '记录赞表',
                'verbose_name_plural': '记录赞表',
            },
        ),
    ]
